name: Extract Network Features (Matrix Mode)

on:
  workflow_dispatch:
    inputs:
      files:
        description: "Comma-separated list of CSV files (e.g., http_status/1.csv,http_status/2.csv)"
        required: true
        type: string
      output_folder:
        description: "Output folder (e.g., network_features)"
        required: true
        default: "network_features"

jobs:
  validate-and-split:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Parse Input Files
        id: set-matrix
        run: |
          IFS=',' read -ra FILE_LIST <<< "${{ github.event.inputs.files }}"
          json="{\"include\": ["
          for file in "${FILE_LIST[@]}"; do
            file=$(echo "$file" | xargs)  # trim
            if [ ! -f "$file" ]; then
              echo "::error::Input file not found: $file"
              exit 1
            fi
            output_file="${{ github.event.inputs.output_folder }}/$(basename "$file")"
            json="$json {\"input_file\": \"$file\", \"output_file\": \"$output_file\"},"
          done
          # Remove trailing comma and close JSON
          json="${json%,} ]}"
          echo "matrix=$json" >> "$GITHUB_OUTPUT"
          echo "$json" | jq .

  run-network-analysis:
    needs: validate-and-split
    runs-on: ubuntu-latest
    timeout-minutes: 350
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.validate-and-split.outputs.matrix) }}

    steps:
      - name: Checkout repo via SSH
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          repository: ${{ github.repository }}
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas cloudscraper beautifulsoup4 tldextract whois dnspython requests

      - name: Create output directory
        run: |
          mkdir -p "$(dirname "${{ matrix.output_file }}")"

      - name: Run Network Feature Extraction
        run: |
          python network_feature_extractor.py \
            --input "${{ matrix.input_file }}" \
            --output "$(dirname "${{ matrix.output_file }}")"

      - name: Verify output
        run: |
          if [ -f "${{ matrix.output_file }}" ]; then
            echo "✅ Generated: ${{ matrix.output_file }}"
            head -n1 "${{ matrix.output_file }}"
          else
            echo "::error::Failed to generate ${{ matrix.output_file }}"
            exit 1
          fi

  commit-results:
    needs: run-network-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          repository: ${{ github.repository }}
          persist-credentials: false
          fetch-depth: 0

      - name: Commit and Push Network Features
        env:
          GIT_SSH_COMMAND: "ssh -i ${{ secrets.SSH_PRIVATE_KEY }} -o StrictHostKeyChecking=no"
        run: |
          git config user.name "Ifeoluwa Oseni"
          git config user.email "ifeoseni@gmail.com"

          # Add all network feature outputs
          git add ${{ github.event.inputs.output_folder }}/*.csv

          if ! git diff --cached --quiet; then
            git commit -m "feat: add network features from ${{ github.event.inputs.files }} [skip ci]"
            git pull origin main --rebase || echo "Rebase conflict? Skipping push."
            git push origin main
            echo "✅ Committed and pushed results"
          else
            echo "➡️ No new changes to commit"
          fi
