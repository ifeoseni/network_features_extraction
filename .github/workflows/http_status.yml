name: Extract Network Features (Manual Matrix)

on:
  workflow_dispatch:
    inputs:
      files:
        description: "Comma-separated list of CSV files (e.g., http_status/1.csv,http_status/2.csv)"
        required: true
        type: string
      output_folder:
        description: "Output folder for results (e.g., network_features)"
        required: true
        default: "network_features"

jobs:
  validate-and-split:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository via SSH
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          fetch-depth: 0 # Full clone

      - name: List All CSV Files
        run: |
          echo "üîç Searching for all CSV files in the repository..."
          ALL_CSVS=$(find . -type f -name "*.csv" | sort)
          if [ -z "$ALL_CSVS" ]; then
            echo "‚ùå No CSV files found in the repository!"
            echo "Please ensure your CSV files are committed and pushed."
            exit 1
          else
            echo "$ALL_CSVS"
          fi
          echo "üìÇ Current directory: $(pwd)"

      - name: Parse and Validate Input Files
        id: set-matrix
        run: |
          # Trim and split input files
          IFS=',' read -ra FILE_LIST <<< "${{ github.event.inputs.files }}"
          valid_count=0

          # Start building matrix
          matrix_json="{\"include\": ["

          for file in "${FILE_LIST[@]}"; do
            # Trim whitespace
            file=$(echo "$file" | xargs)
            if [ -z "$file" ]; then
              continue
            fi
            
            # Validate that file exists
            if [ -f "$file" ]; then
              echo "‚úÖ Found input file: $file"
              output_file="${{ github.event.inputs.output_folder }}/$(basename "$file")"
              matrix_json="$matrix_json {\"input_file\": \"$file\", \"output_file\": \"$output_file\"},"
              valid_count=$((valid_count + 1))
            else
              echo "::error::File not found: $file"
              echo "::error::Please check the path. Available files:"
              find . -type f -name "*.csv" | xargs echo "  - "
              exit 1
            fi
          done

          # Check if any valid files were found
          if [ $valid_count -eq 0 ]; then
            echo "::error::No valid input files provided."
            exit 1
          fi

          # Finalize JSON (remove trailing comma)
          matrix_json="${matrix_json%,} ]}"

          # Set matrix as output
          echo "matrix=$matrix_json" >> "$GITHUB_OUTPUT"

          # Display the generated matrix for debugging
          echo "‚úÖ Generated matrix for $valid_count file(s):"
          echo "$matrix_json" | python3 -m json.tool || echo "$matrix_json"

  run-network-analysis:
    needs: validate-and-split
    runs-on: ubuntu-latest
    timeout-minutes: 350 # 5h 50m (max safe limit)
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.validate-and-split.outputs.matrix) }}

    steps:
      - name: Checkout repository via SSH
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          fetch-depth: 0 # Full clone

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas cloudscraper beautifulsoup4 tldextract whois dnspython requests aiohttp backoff

      - name: Create output directory
        run: |
          mkdir -p "$(dirname ${{ matrix.output_file }})"

      - name: Run Network Feature Extraction
        run: |
          python network_feature_extractor.py \
            --input "${{ matrix.input_file }}" \
            --output "$(dirname ${{ matrix.output_file }})"

      - name: Verify output
        run: |
          if [ -f "${{ matrix.output_file }}" ]; then
            echo "‚úÖ Successfully generated ${{ matrix.output_file }}"
          else
            echo "::error::Failed to generate ${{ matrix.output_file }}"
            exit 1
          fi

  commit-results:
    needs: run-network-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository via SSH
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          fetch-depth: 0 # Full clone

      - name: Commit and push network features
        env:
          GIT_SSH_COMMAND: "ssh -i ${{ secrets.SSH_PRIVATE_KEY }} -o StrictHostKeyChecking=no"
        run: |
          git config user.name "Ifeoluwa Oseni"
          git config user.email "ifeoseni@gmail.com"

          git add ${{ github.event.inputs.output_folder }}/*.csv

          if ! git diff --cached --quiet; then
            git commit -m "feat: add extracted network features [skip ci]"
            git pull origin main --rebase || echo "Rebase conflict? Safe to retry."
            git push origin main
          else
            echo "‚û°Ô∏è No changes to commit"
          fi
